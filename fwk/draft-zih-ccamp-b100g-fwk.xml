<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
    which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" []>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
    please see http://xml.resource.org/authoring/README.html. -->
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="info" docName="draft-zih-ccamp-otn-b100g-fwk-00" ipr="trust200902">
    <!-- ***** FRONT MATTER ***** -->
    <front>
        <title abbrev="B100G Extensions">GMPLS Routing and Signaling Framework for B100G</title>
        <author fullname="Qilei Wang" initials="Q." surname="Wang" role="editor">
            <organization>ZTE</organization>
            <address>
                <postal>
                    <street></street>
                    <city>Nanjing</city>
                    <region></region>
                    <code></code>
                    <country>CN</country>
                </postal>
                <phone></phone>
                <email>wang.qilei@zte.com.cn</email>
            </address>
        </author>
        <author fullname="Yuanbin Zhang" initials="Y." surname="Zhang">
            <organization>ZTE</organization>
            <address>
                <postal>
                    <street></street>
                    <city>Beijing</city>
                    <region></region>
                    <code></code>
                    <country>CN</country>
                </postal>
                <phone></phone>
                <email>zhang.yuanbin@zte.com.cn</email>
            </address>
        </author>
        <author fullname="Radha Valiveti" initials="R.S." surname="Valiveti">
            <organization>Infinera Corp</organization>
            <address>
                <postal>
                    <street></street>
                    <city>Sunnyvale</city>
                    <region></region>
                    <code></code>
                    <country>USA</country>
                </postal>
                <phone></phone>
                <email>rvaliveti@infinera.com</email>
            </address>
        </author>
        <author fullname="Iftekhar Hussain" initials="I." surname="Hussain" role="editor">
            <organization>Infinera Corp</organization>
            <address>
                <postal>
                    <street></street>
                    <city>Sunnyvale</city>
                    <region></region>
                    <code></code>
                    <country>USA</country>
                </postal>
                <phone></phone>
                <email>IHussain@infinera.com</email>
            </address>
        </author>
        <author fullname="Rajan Rao" initials="R." surname="Rao">
            <organization>Infinera Corp</organization>
            <address>
                <postal>
                    <street></street>
                    <city>Sunnyvale</city>
                    <region></region>
                    <code></code>
                    <country>USA</country>
                </postal>
                <phone></phone>
                <email>rrao@infinera.com</email>
            </address>
        </author>
        <author fullname="Huub van Helvoort" initials="H." surname="Helvoort">
            <organization>Hai Gaoming B.V</organization>
            <address>
                <postal>
                    <street></street>
                    <city></city>
                    <region></region>
                    <code></code>
                    <country></country>
                </postal>
                <phone></phone>
                <email>huubatwork@gmail.com</email>
            </address>
        </author>
     
        <date/>
        <!-- Meta-data Declarations -->
        <area>General</area>
        <workgroup>Internet Engineering Task Force</workgroup>
        <keyword>template</keyword>
        <abstract>
            <t> The latest revision of G.709 introduces support for OTU links with rates larger than 100G. This document provides a framework to address the GMPLS routing and signalling extensions that enable GMPLS to setup paths through network that contain these newly introduced OTUCn links.         
            </t>
        </abstract>
    </front>
    <middle>
        <section title="Introduction" anchor="section-introduction">
            <t> The current GMPLS routing <xref target="RFC7138"></xref> and signaling extensions <xref target="RFC7139"></xref> includes coverage for all the OTN capabilities that were defined in the 2012 version of G.709 <xref target="ITU-T_G709_2012"></xref>. The 2012 version of the G.709 included support for the following capabilities:</t>
            <t><list style="letters">
            <t> Introduction of ODU0 </t>
            <t> Mapping of 100BASE-X client (1GE) and other sub-1.25G client signals into ODU0 </t>
            <t> Mapping of FC-1200 into ODU2e </t>
            <t> Mappings for 100GBASE-R and 40GBASE-R Ethernet client signals.</t>
            <t> OTU4 layer with a rate of 100G. </t>
            <t> Support for 1.25G tributary slots in OPU2, OPU3, OPU4 -- to fully support the newly introduced ODU0 signal.</t>
            <t> Support for multi-lane interfaces for OTU3, and OTU4 signals</t>
            </list></t>
            
            <t>The 2016 version of G.709 <xref target="ITU-T_G709_2012"/> introduces support for higher rate OTU signals, termed OTUCn (which have a nominal rate of 100n Gbps). The newly introduced OTUCn represent a very powerful extension to the OTN capabilities, and one which naturally scales to transport any newer clients with bit rates in excess of 100G, as they are introduced.</t>
            
            <t>This document presents an overview of the changes introduced in <xref target="ITU-T_G709_2016"></xref> and analyzes them to identify the extensions that would be required in  GMPLS routing and signaling to enable the new OTN capabilities. In an OTN network as defined by <xref target="ITU-T_G709_2016"></xref> and <xref target="ITU-T_G798"></xref>, two layers can be switched at the intermediate nodes: (a) ODU (digital switching), (b) OCh/Optical Tributary Signal (OTSi) (optical switching). This document focuses on the GMPLS extensions that are necessary to support ODU switching in networks that include the beyond 100G OTU links. </t>
            
            <section title="Requirements Language">
                <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this                    document are to be interpreted as described in 
                    <xref target="RFC2119">RFC 2119</xref>.
                </t>
            </section>
        </section>
        <section title="Terminology">
            <t>
                <list style="letters">
                    <t>OPUCn: Optical Payload Unit -Cn. This signal can be seen as the interleaving of n OPUC "slices". </t>
                    <t>ODUCn: Optical Data Unit - Cn. Like the OPUCn, this signal can be seen as the interleaving of n slices of ODUC signals.</t>
                    <t>OTUCn: Fully standardized Optical Transport Unit - Cn. This signal can be viewed as being formed as a result of multiplexing n OTUC "slices". An OTUCn has a bandwidth of (approximately) nx100G. An OTUCn signal has n OTUC/ODUC/OPUC overhead instances. </t>
                    <t>OTUCn-M: This signal is an extension of the OTUCn signal introduced above. This signal contains the same amount of overhead as the OTUCn signal, but contains a reduced amount of payload area. Specifically the payload area consists of M 5G tributary slots (where M is strictly less than 20*n).</t>
                    <t> GMP: Generic Mapping Procedure. This procedure allows a uniform asynchronous mapping procedure for a adapting a client signal to a server layer. This generic mapping procedure computes the population of stuff bytes for all client/server signal rates. Specifically this procedure is used to map client signals into ODU(s), and Low-Order ODUs into High-Order ODUs.</t>
                    <t>
						PSI: OPU Payload structure Indicator. This is a multi-frame message and describes the composition of the OPU signal. This structure includes a field called Payload Type (PT) whose values indicates whether the OPU payload area has been formed by (a) mapping a single non-OTN client  (b) multiplexing LO-ODUs. The MSI field is a substructure of the PSI structure, and contains information about the ODU mix contained in a HO-ODU. For mappings of type (b), the following PT codepoints are defined: 
						<list style="letters">
							<t> 0x20: indicates 2.5G time slots (with AMP) </t>
							<t> 0x21: indicates 1.25G tributary slots (with GMP).</t>
							<t> 0x22: (introduced in <xref target="ITU-T_G709_2016"/> is used for ODUCn entities, and implies a tributary slot granularity of 5G (with GMP). </t>
						</list>
					</t>
                    <t> MSI: Multiplex Structure Indicator. This structure indicates the grouping of the tributary slots in an OPU payload area to realize a client signal that is multiplexed into an OPU. The individual clients multiplexed into the OPU payload area are distinguished by the Tributary Port number (TPN).</t>
                    <t>FlexO lane: Refers to an electrical/optical lane of a FlexO interface, used to carry OTUC transport signals. </t>
                    <t>FlexO group: Refers to the group of m * FlexO interfaces. </t>     
					<t> AMP: Asynchronous Mapping Procedure </t>
					<t> BMP: Bitsynchronous Mapping Procedure </t>
					<t> GMP: Generic Mapping Procedure </t>
                </list>
            </t>
        </section>
        <section title="Overview of B100G links in G.709">
            <section title="The OTUCn signal">
                <t>
                    In G.709 <xref target="ITU-T_G709_2012"></xref>, the standard mechanism for transporting a client signal is to first map it into an ODU signal (of the appropriate rate), and then switch the resulting ODU signal through the OTN network. In the course of its traversal through the OTN network, the ODU signal generated by the mapper is either (a) multiplexed into higher-order ODU, and then encapsulated to form an OTU or (b) directly encapsulated into an OTU signal that defines the section layer. The option (b), i.e. direct encapsulation into an OTU was possible only for ODU1/ODU2/ODU3/ODU4; ODU signals with other rates (e.g. ODUflex) would first have to be processed per option (a) above. The term "client signal" is generic in the sense that it encompasses both Constant Bit rate (CBR) clients (e.g. 10GBASE-R, SONET OC-768), or packet traffic -- where the goal is to transfer the payload from end-to-end (without regard for bit transparency at the PCS layer). Given that OTU4 was the highest rate section layer signal supported in <xref target="ITU-T_G709_2012"></xref>, the client signal rates were limited to be less than 100G (if ODU-VCAT was not used). 
                </t>
                <t>
                    With the emergence of client signals with rates greater than 100Gbps (e.g. 200GBASE-R, 400GBASE-R Ethernet), aggregate signals such as FlexE (<xref target="OIF_FLEXE_1.0"/>, and the availability of NPUs which can source packet traffic of n*100G, it becomes necessary for the OTN to transport these signals. This means that the OTN must be capable of creating, and switching ODU entities with rates in excess of n*100G. Traditionally, the ITU-T has introduced OTUx/ODUx signals in G.709 as and when new client signals with higher rates are defined by other standards bodies (e.g. IEEE). Rather than follow the traditional trajectory, <xref target="ITU-T_G709_2016"/> takes a general and scalable approach to decoupling the rates of OTU signals from the client rate evolution. The new OTU signal is called OTUCn; this signal is defined to have a rate of (approximately) n*100G. The following are the key characteristics of the OTUCn signal:
                    <list style="letters">
                        <t> Unlike the signals OTU1..OTU4, the OTUCn signals are not realized by keeping the frame format intact and increasing the frame rate. </t>
                        <t>
                            The OTUCn signal contains one ODUCn, which in turn contains one OPUCn signal. The OTUCn and ODUCn signals serve as section layer entities.
                        </t>
                        <t> 
                            The OTUCn signals can be viewed as formed by interleaving n OTUC signals (where are labeled 1, 2, ..., n), each of which has the format of a standard OTUk signal without the FEC columns (per <xref target="ITU-T_G709_2016"/>:Figure 7-1). The ODUCn, and OPUCn have a similar structure, i.e. they can be seen as being formed by interleaving n instances of ODUC, OPUC signals (respectively) The OTUC signal contains the ODUC, and OPUC signals, just as in the case of fixed rate OTUs defined in G.709 <xref target="ITU-T_G709_2016"/>. 
                        </t>
                        <t> 
                            Each of the OTUC "slices" have the same overhead (OH) as the standard OTUk signal in G.709 <xref target="ITU-T_G709_2016"/>. The combined signal OTUCn has n instances of OTUC OH, ODUC OH, and OPUC OH.
                        </t>
                        <t>
                            The OTUC signal has a slightly highly rate compared to the OTU4 signal (without FEC); this is to ensure that the OPUC payload area can carry an ODU4 signal. 
                        </t>
                    </list>
                </t>
                <section title="Carrying OTUCn signal between 3R points">
                <t>
                    As explained above, within G.709 <xref target="ITU-T_G709_2016"/>, the OTUCn, ODUCn and OPUCn signal structures are presented in an interface independent manner, by means of n OTUC, ODUC and OPUC instances that are marked #1 to #n. Specifically, the definition of the OTUCn signal does not cover aspects such as FEC, modulation formats, etc. These details are defined as part of the adaptation of the OTUCn layer to the optical layer(s). The specific interleaving of OTUC/ODUC/OPUC signals onto the optical signals is interface specific and specified for OTN interfaces with standardized application codes in the interface specific recommendations (G.709.x).
                </t>
				<t>
                    The original working assumption was that the first B100G inter-domain interface for an OTUC4 would use the optical modules developed for the 400GbE signal. This assumption has been revised as a result of new insights into how the notions developed for FlexE can be applied to the OTN domain. The new developments make it possible to support OTUC4 signals without having to wait for the 400GbE optical modules. The main motivation for developing the interoperable FlexO interfaces is to (a) reuse already existing optical modules developed for carrying Ethernet signals and (b) realize higher rate OTUCn interfaces by bonding the required number of available PHY(s) -- thereby decoupling the rates of OTUCn interfaces from the rates of the available Ethernet PHY(s) . The FlexO layer can be viewed as an encapsulation layer for the OTUCn signal.
                </t> 
				<t>
                    Recommendation <xref target="ITU-T_G709.1"/> specifies a flexible interoperable short-reach OTN interface over which an OTUCn (n >=1) is transferred, using bonded FlexO interfaces which belong to a FlexO group. Conceptually, the FlexO can be seen as the adaptation of the idea of FlexE <xref target="OIF_FLEXE_1.0"/> to OTN signals. Like the FlexE group, the FlexO group supports physical interface bonding, the management of the group members, overhead for communication between FlexO peers etc. (these overheads are separate from the GCC0 channel defined over OTUCn). In its current form, Recommendation <xref target="ITU-T_G709.1"/> is limited to the case of transporting OTUCn signals using n 100G Ethernet PHY(s). When the PHY(s) for the emerging set of Ethernet signals, e.g. 200GbE and 400GbE, become available, new recommendations can define the required adaptations.
                </t>
              
                <t>
                    The (high-level) sequence of steps performed at the FlexO/OTUCn adaptation source are the following:
                    <list style="letters">
                        <t> one OTUCn is split into n instances of OTUC at the FlexO source node.</t>
                        <t> 
                            One or more OTUC instances are associated with one FlexO interface (which could have a rate of p*100G. As of this document's writing, Ethernet PHY(s) exist for transporting 100GBASE-R signals (i.e. p=1). This is the basis for the FlexO interface specified in <xref target="ITU-T_G709.1"/>. For this specific instance, the mapping between OTUC, and the FlexO interface is 1:1, and the mapping is illustrated in <xref target="fig_OTUCn_FlexO_Mapping_1"/>. <xref target="fig_OTUCn_FlexO_Mapping_2"/> illustrates the scenario in which OTUCn transport makes use of 200GbE PHY(s).
                        </t>
                        <t>
                            The contents of the selected subset of OTUC signals are mapped to FlexO frames directed at one of the FlexO interfaces in the FlexO group. 
                        </t>
                        <t>
                            Alignment markers are added to these FlexO frames so that the resulting stream can be transported across multiple physical/electrical lanes. The standard IEEE FEC used in conjuction with the appropriate Ethernet signal(e.g. 100GbE, or 200GbE) is also added to the frames.
                        </t>
                    </list>
                </t>
                <t>
                    The sink performs the reverse sequence of operations and reconstructs the OTUCn signal. As a result of the direct encapsulation of the OTUCn signal into the FlexO layer, full transparency for the OTUCn layer is guaranteed. Once the OTUCn signal is transported between 3R regeneration points, all B100G capabilities -- such as the support for ODUs with rates higher than 100G, and client signals larger than 100G are enabled.
                </t>
                <figure title = "OTUCn transport using 100GbE PHY(s)" align="center" anchor="fig_OTUCn_FlexO_Mapping_1">
                    <preamble>==================================================================</preamble>
                    <artwork align="center">                    
                    <![CDATA[
   +----------------------------------+
   |          OTUCn                   |    OTUCn signal
   +----------------------------------+
       |           |              |
       |           |     ....     |
   +-------+   +-------+      +-------+    n X OTUC instances
   | OTUC  |   | OTUC  |      | OTUC  |
   +-------+   +-------+      +-------+
       |           |              |
       |           |              |
   +-------+   +-------+      +-------+    n FlexO interfaces
   | FlexO |   | FlexO |      | FlexO |
   | Frame |   | Frame |      | Frame |
   +-------+   +-------+      +-------+
       |           |              |
+---------------------------------------->  Electrical lanes
       |           |              |
       |           |              |
   +-------+   +-------+      +-------+    n 100GbE Eth PHY(s)
   | 100GE |   | 100GE |      | 100GE |
   | PHY   |   | PHY   |      | PHY   |
   +-------+   +-------+      +-------+
                    ]]>
                    </artwork>
                    <postamble>==================================================================</postamble>
                </figure>    

                <figure title = "OTUCn transport with 200G PHY(s)" align="center" anchor="fig_OTUCn_FlexO_Mapping_2">
                    <preamble>==================================================================</preamble>
                    <artwork align="center">                    
                    <![CDATA[
   +----------------------------------+
   |          OTUCn                   |    OTUCn signal
   +---+-----------+--------------+---+
       |           |              |
       |           |     ....     |
   +---+---+   +---+---+      +---+---+    n X OTUC instances
   | OTUCx2|   | OTUCx2|      | OTUCx2|    n/2 groups, 2 OTUC/group
   +---+---+   +---+---+      +---+---+
       |           |              |
       |           |              |
   +---+---+   +---+---+      +---+---+    n/2  FlexO interfaces
   | FlexO |   | FlexO |      | FlexO |
   | Frame |   | Frame |      | Frame |
   +---+---+   +---+---+      +---+---+
       |           |              |
+---------------------------------------->  Electrical lanes
       |           |              |
       |           |              |
   +---+---+   +---+---+      +---+---+    n/2 200GbE Eth PHY(s)
   | 200GE |   | 200GE |      | 200GE |
   | PHY   |   | PHY   |      | PHY   |
   +-------+   +-------+      +-------+
                    ]]>
                    </artwork>
                    <postamble>==================================================================</postamble>
                </figure>    
				
                </section>
            </section>
            
            <section title="The OTUCn-M signal">
                <t>
                    The standard OTUCn signal has the same rate as that of the ODUCn signal as captured in <xref target="table_oducn_rates"/>. This implies that the OTUCn signal can only be transported over wavelengths which have a capacity of multiples of (approximately) 100G. Modern DSPs support a variety of bit rates per wavelength, depending on the reach requirements for the optical link. With this in mind, ITU-T supports the notion of a reduced rate OTUCn signal, termed the OTUCn-M. The OTUCn-M signal is derived from the OTUCn signal by retaining all the n slices of overhead (one per OTUC slice) and trimming the OPUC tributary slots marked as "unavailable". This operation is equivalent to that referred to as "crunching" in the context of FlexE PHY(s).
                </t>
            </section>

            <section title="The ODUCn signal"> 
                <t>
                    The ODUCn signal <xref target="ITU-T_G709_2016"/> can be viewed as being formed by the appropriate interleaving of content from n ODUC frames. The ODUC frames have the same structure as a standard ODU -- in the sense that it has the same Overhead (OH), and the payload area -- but has a higher rate since its payload area can embed an ODU4 signal. The ODUCn is meant to be used as a high-order signal only -- implying that only other lower-rate (i.e. low-order) ODUs can be multiplexed into an ODUCn signal; in other words, no client signals can be directly mapped to an ODUCn signal. The ODUCn signals have a rate that is captured in <xref target = "table_oducn_rates"/>.
                </t>
                <texttable anchor="table_oducn_rates" title="ODUCn rates">
                    <ttcol align='center'>ODU Type</ttcol>
                    <ttcol align='center'>ODU Bit Rate</ttcol>
                    <c>ODUCn</c>
                    <c>n x 239/226 x 99,532,800 kbit/s</c>
                    <postamble> Not all values of 'n' may be standardized by ITU-T-T.</postamble>
                </texttable>    
                <t>
                    The ODUCn is a higher-order ODU signal, and is encapsulated into an OTUCn signal which occupies the section layer. In most common scenarios, the ODUCn, and OTUCn signals will be co-terminous, i.e. they will have identical source/sink locations. <xref target="ITU-T_G709_2016"/> and <xref target="ITU-T_G872"/> allow for the ODUCn signal to pass through a digital regenerator node which will terminate the OTUCn layer, but will pass the regenerated (but otherwise untouched) ODUCn towards a different OTUCn interface where a fresh OTUCn layer will be initiated. Specifically, the OPUCn signal flows through these regenerators unchanged. That is, the set of client signals, their TPNs, trib-slot allocation remains unchanged. Note however that the ODUCn Overhead (OH) might be modified if TCM sub-layers are instantiated in order to monitor the performance of the repeater hops. In this sense, the ODUCn should not be seen as a general, switchable ODU.
                </t>
            </section>
            <section title="OPUCn Time Slot Granularity">
              <t><xref target="ITU-T_G709_2012"></xref> introduced the support for 1.25G granular tributary slots in OPU2, OPU3, and OPU4 signals. With the introduction of higher rate signals such as the OPUCn (which are formed by interleaving n OPUC signals), it is no longer practical for the optical networks (and the datapath hardware) to support a very large number of flows at such a fine granularity. ITU-T has defined the OPUC with a tributary slot granularity of 5G. This choice is motivated by the following reasons: </t>
              <t>
                    <list style="letters">
                    <t> Low bitrate flows will usually be aggregated into higher-order ODUs before they are transported over the core of the transport network, and as a consequence, the network is not expected to see a large number of small bitrate flows such as ODU0.</t>
                    <t> The IEEE is planning to define new MAC rates such as 25Gbps. The choice of 5G TS for OPUC nicely accomodates 25GE clients, without wasting a large amount of bandwidth</t>
                    <t> The OIF FlexE Implementation agreement also defines the FlexE PHY calendar slots to have a bandwidth of 5G; the OPUC granularity perfectly matches the capacity of the finest FlexE client.</t>
                    </list>
                </t>
            </section>
            <section title="Structure of OPUCn MSI">
                <t> 
                    An OPUCn signal can be viewed as being formed from an interleaving of n OPUC signals. Each of the OPUC "slices" has a format that is very similar to that OPU4 -- albeit with a slightly higher rate (since an ODU4 can be fully embedded in the payload area of the OPUC signal). As mentioned above, the OPUC signal has 20 tributary slots, each with a bandwidth of 5G. The PSI structure for an OPUCn signal can be viewed as the concatenation of n PSI structures (one per OPUC). The PSI structure of an OPUC includes the following fields:
                    <list style = "letters">
                        <t> the Payload Type (PT) - 1byte -  with a value of 0x22. This indicates that ODUC has been formed by multiplexing zero or more low-order ODUs into OPUC.</t>
                        <t> Reserved Field - 1 byte. In ODUs other than ODUC (e.g. ODU0/1/2/3/4/flex), this byte carries the "Client Signal Failure Indication". This field is unused in the case of ODUC entities since no non-OTN client signal is directly mapped to these server layers.</t>
                        <t> The MSI field (of size 40 bytes) which contains the information about 20 tributary slots; each such information structure occupies 2 bytes and has the following format (<xref target="ITU-T_G709_2016"> G.709:Section 20.4.1 </xref>):</t>
                    </list>
                </t>
                <texttable anchor="table_opuc_msi" title="OPUC MSI information (for each tributary slot">
                    <ttcol align='left'>Bit Position # (Bit 1= MSB; Bit 16 = LSB)</ttcol>
                    <ttcol align='left'>Description</ttcol>
                    <c>1</c>
                    <c>The TS availability bit 1 indicates if the tributary slot is available or unavailable</c>
                    <c>9</c>
                    <c>The TS occupation bit 9 indicates if the tributary slot is allocated or unallocated</c>
                    <c>2-8, 10-16</c>
                    <c>The tributary port number (TPN) of the client signal that is being transported in this TS. A given client uses the same TPN value in all the TS(s) that are being used to transport the client signal. ODTUCn.ts tributary ports are numbered 1 to 10n. The current 14-bit field for the TPN will allow the index 'n' to grow as large as 1638 -- which is sufficient for all conceivable OTUCn links.</c>
                </texttable>    
            </section>      
            <section title="Client Signal Mappings">
                <t>
                   Note that <xref target="ITU-T_G709_2016"/> introduces support for OTUCn signals with rates of n*100G and also introduces support for client signals with rates larger than 100G (e.g. the future 400GBASE-R client being standardized by IEEE, higher packet streams from NPUs). The approach taken by the ITU-T to map non-OTN client signals to the appropriate ODU containers is as follows:
                    <list style="letters">
						<t> 
							All client signals with rates less than 100G are mapped as specified in <xref target="ITU-T_G709_2016"/>:Clause 17. These mappings are identical to those specified in the earlier revision of G.709 <xref target="ITU-T_G709_2012"/>. Thus, for example, the 1000BASE-X/10GBASE-R signals are mapped to ODU0/ODU2e respectively (see <xref target="table_odu_rates"/> -- based on Table 7-2 in <xref target="ITU-T_G709_2016"/>)
						</t>
                        <t>
                            Always map the new and emerging client signals to ODUflex signals of the appropriate rates (see <xref target="table_odu_rates"/> -- based on Table 7-2 in <xref target="ITU-T_G709_2016"/>)
                        </t>
                        <t>
                            Drop support for ODU Virtual Concatenation. This simplifies the network, and the supporting hardware since multiple different mappings for the same client are no longer necessary. 
                        </t>
                        <t> 
                            ODUflex signals are low-order signals only. If the ODUflex entities have rates of 100G or less, they can be transported using either an ODUk (k=1..4) or an ODUCn server layer. On the other hand, ODUflex connections with rates greater than 100G will require the server layer to be ODUCn. The ODUCn signals must be adapted to an OTUCn signal. <xref target="g709-digital-structure"/> illstrates the hierarchy of the digital signals defined in G.709; this figure does not illustrate the handed off to the optical layers.
                        </t>
                    </list>
                </t>
                <texttable anchor="table_odu_rates" title="Types and rates of ODUs usable for client mappings">
                    <ttcol align='center'>ODU Type</ttcol>
                    <ttcol align='center'>ODU Bit Rate</ttcol>
                    <c>ODU0</c>
                    <c>1,244,160 Kbps</c>
                    <c>ODU1</c>
                    <c>239/238 x 2,488,320 Kbps</c>
                    <c>ODU2</c>
                    <c>239/237 x 9,953,280 Kbps</c>
                    <c>ODU2e</c>
                    <c>239/237 x 10,312,500 Kbps</c>
                    <c>ODU3</c>
                    <c>239/236 x 39,813,120 Kbps</c>
                    <c>ODU4</c>
                    <c>239/227 x 99,532,800 Kbps</c>
                    <c>ODUflex for CBR client signals</c>
                    <c>239/238 x Client signal Bit rate</c>
                    <c>ODUflex for GFP-F mapped packet traffic</c>
                    <c>Configured bit rate</c>
                    <c>ODUflex for IMP mapped packet traffic</c>
                    <c>s x 239/238 x 5 156 250 kbit/s: s=2,8,5*n, n &ge; 1</c>
                    <c>ODUflex for FlexE aware transport</c>
                    <c>103 125 000 x 240/238 x n/20 kbit/s, where n is total number of available tributary slots among all PHYs which have been crunched and combined.</c>
                    <postamble>Note that this table doesn't include ODUCn -- since it cannot be generated by mapping a non-OTN signal. An ODUCn is always formed by multiplexing multiple LO-ODUs.</postamble>
                </texttable>  
				<figure title="Digital Structure of OTN interfaces (from G.709:Figure 6-1)" align="center" anchor="g709-digital-structure" >
	                   <preamble>==================================================================</preamble>
						<artwork align="center">
                        <![CDATA[
              Clients (e.g. SONET/SDH, Ethernet)
                   +       +      +
                   |       |      |
+------------------+-------+------+------------------------+
|                     OPUk                                 |
+----------------------------------------------------------+
|                     ODUk                                 |
+-----------------------+---------------------------+------+
| OTUk, OTUk.V, OTUkV   |          OPUk             |      |
+----------+----------------------------------------+      |
| OTLk.n   |            |          ODUk             |      |
+----------+            +---------------------+-----+      |
                        | OTUk, OTUk.V, OTUkV |   OPUCn    |
                        +----------+-----------------------+
                        | OTLk.n   |          |   ODUCn    |
                        +----------+          +------------+
                                              |   OTUCn    |
                                              +------------+
                    ]]>
                    </artwork>
                    <postamble>==================================================================</postamble>
                </figure>			
            </section>
         </section>
        <section title="Usecases">
            <t> 
                This section introduces various usecases, in increasing order of complexity. This material serves as background information that provides the rationale for the requirements that any solution must satisfy. At a later point in time, it is possible to consolidate these usecases so that all the multiplexing (and demultiplexing) variants are encountered along the path of an end-to-end ODU circuit.
            </t>
            <t>
                Note: These usecases present scenarios in which OTUCn links are depicted. These illustrations do not highlight how the OTUCn is transported between the 3R points. That is, these usecases cover cases in which a standard FlexO interface (e.g. as defined in <xref target="ITU-T_G709.1"/>) is used, or whether a vendor specific mapping of OTUCn to OTSiG (as defined in <xref target="ITU-T_G872"/>) is used. In other words, multiple variants of these usecases based on FlexO usage (or not) are not included in this document.
            </t>
            <section title="100GE Client Service with a homogeneous chain of OTUC1 links">
                <t> 
                    In the scenario illustrated in <xref target="fig_b100g_uc1a"></xref> a 100GBASE-R client is mapped into an ODU4 at NE1. The resulting ODU4 signal is multiplexed into the ODUC1 server layer (using GMP) and further encapsulated to form the OTUC1 signal. The links NE1-NE2, and NE2-NE3 are both OTUC1 links -- and they can carry one 100GE client mapped into an ODU4 server layer. Actions performed at NE2 are: (a) terminate OTUC1, and ODUC1 towards NE1 (b) demultiplex the ODU4 signal from ODUC1 (c) map the ODU4 signal onto a different ODUC1/OTUC1 towards NE3. NE3 performs the inverse sequence of steps performed at NE1, and recovers the 100GBASE-R client from the ODU4 signal. Note that the ODU4 and ODUC1 signals are not "interoperable" and that the ODUC1 is a server layer to the ODU4 signal.
                </t>
                <t> 
                    This illustration is also applicable to the usecase in which members of a FlexE group are transported in a flexe-unaware mode in the transport network. Although this illustration included only OTUC1 signals, any higher rate OTUCn signal can be substituted for these signals. In this particular scenario, there are two adjacent ODUC1 hops, and the NE2 demultiplexs (and multiplexes) the ODU4 onto the ODUC1. It is possible to construct an alternative scenario in the case when NE2 acts as a regenerator, and doesn't terminate the ODUC1 signals in the two hops, and instead repeats the ODUC1 signal; this scenario is specifically discussed in <xref target="section_multihop_ODUCn"/>.
                </t>
                <figure title = "100GE Client service" align="center" anchor="fig_b100g_uc1a">
                    <preamble>==================================================================</preamble>
                    <artwork align="center">
                        <![CDATA[
    +----------+                                  +----------+
    |  100GE   |                                  |  100GE   |
    +----------+        +---------------+         +----------+
    |  ODU4    |        |      ODU4     |         |  ODU4    |
    +----------+        +---------------+         +----------+
    |  ODUC1   |        | ODUC1 | ODUC1 |         |  ODUC1   |
    +----------+        +---------------+         +----------+
    |  OTUC1   +--------+ OTUC1 | OTUC1 +---------+  OTUC1   |
    +----------+        +---------------+         +----------+
       NE1                  NE2                     NE3

             +------------->            +------------->
                Scope of                    Scope of
                OTUC1, ODUC1                OTUC1, ODUC1
                    ]]>
                    </artwork>
                    <postamble>==================================================================</postamble>
                </figure>
            </section>
            <section title="100GE Client Service with a mix of OTU4, and OTUC1 links">
                <t> 
                    In the scenario illustrated in <xref target="fig_b100g_uc1b"></xref> a 100GBASE-R client is mapped into an ODU4 at NE1. The resulting ODU4 signal is encapsulated with an OTU layer to form the OTU4 signal.  Actions performed at NE2 are: (a) terminate OTU4 layer, and extract the ODU4 signal (b) map the ODU4 signal onto a different ODUC1/OTUC1 towards NE3. NE3 performs the same set of actions that were performed by NE3 in <xref target="fig_b100g_uc1a"></xref>.
                </t>
                <figure title = "100GE Client Service with a mix of OTU4, and OTUC1 links" align="center" anchor="fig_b100g_uc1b">
                    <preamble>==================================================================</preamble>
                    <artwork align="center">
                        <![CDATA[
+----------+                                  +----------+
|  100GE   |                                  |  100GE   |
+----------+        +---------------+         +----------+
|  ODU4    |        |      ODU4     |         |  ODU4    |
+----------+        +-------+-------+         +----------+
|  OTU4    +--------+ OTU4  | ODUC1 |         |  ODUC1   |
+----------+        +---------------+         +----------+
                            | OTUC1 +---------+  OTUC1   |
                            --------+         +----------+
     NE1                 NE2                     NE3

        +-------------->         +---------------->
            Scope of                    Scope of
            OTU4 layer                  OTUC1, ODUC1
                    ]]>
                    </artwork>
                    <postamble>==================================================================</postamble>
                </figure>
            </section>
            <section title="400GE Client Service with a mix of OTUCn links">
                <t> 
                    In the scenario illustrated in <xref target="fig_b100g_uc2"></xref> a 400GBASE-R client is mapped into an ODUflex at NE1. The resulting ODUflex signal is multiplexed into an ODUC4 (using GMP), and then transformed into an OTUC4 signal.  The links between NE1-NE2, and NE2-NE3 are  OTUC4 and OTUC6 (respectively). Actions performed at NE2 are: (a) terminate OTUC4, and ODUC4 towards NE1 (b) demultiplex the ODUflex signal from ODUC4 (c) map the ODU4 signal onto ODUC6/OTUC6 towards NE3. NE3 performs the inverse sequence of steps performed at NE1, and recovers the 400GBASE-R client from the ODUflex signal.
                </t>      
                <t>
                    Although not specifically illustrated in this figure, the 200G of spare capacity in the NE2-NE3 links can be used to carry other client signals.. Although the scenario illustrated in <xref target="fig_b100g_uc2"></xref> is specific to 400GE, the treatment for packet clients at other rates (e.g. 25G, 50G, 200G) follows a very similar processing sequence. In the case of 25GBASE-R clients , the 25GE client signal will be mapped to an ODUflex, and can be multiplexed into an ODU4 signal, or an ODUCn signal as illustrated here.  
                </t>
                <figure title = "400GE transport over OTUCn links" align="center" anchor="fig_b100g_uc2">
                    <preamble>==================================================================</preamble>
                    <artwork align="center">
                        <![CDATA[
+----------+                                  +----------+
|  400GE   |                                  |  400GE   |
+----------+        +---------------+         +----------+
|  ODUflex |        |    ODUflex    |         |  ODUflex |
+----------+        +-------+-------+         +----------+
|  ODUC4   |        | ODUC4 | ODUC6 |         |  ODUC6   |
+----------+        +---------------+         +----------+
|  OTUC4   +--------+ OTUC4 | OTUC6 +---------+  OTUC6   |
+----------+        +-------+-------+         +----------+
   NE1                  NE2                     NE3

         <------------->            <------------->
            Scope of                    Scope of
            OTUC4, ODUC4                OTUC6, ODUC6

                    ]]>
                    </artwork>
                    <postamble>==================================================================</postamble>
                </figure>
            </section>
            
            <section title="FlexE aware transport over OTUCn links">
                <t> 
                    In the scenario illustrated in <xref target="fig_b100g_uc3a"></xref> NE1 interfaces to a client equipment which includes the FlexE SHIM functions which originate/terminate a FlexE group. The transport network edge node NE2 is FlexE aware -- but doesn't terminate the FlexE group. NE1 may (as defined in the FlexE draft <xref target="I-D.izh-ccamp-flexe-fwk"></xref>), crunch the unavailable tributary slots in the FlexE PHY signals, and map the resultant stream to one or more ODUflex signals.  The links between NE1-NE2, and NE2-NE3 are  OTUC4 and OTUC6 (respectively). Actions performed at NE2 are: (a) terminate OTUC4, and ODUC4 towards NE1 (b) demultiplex the ODUflex signal from ODUC4 (c) map the ODUflex signal onto ODUC6/OTUC6 towards NE3. NE3 recovers the Crunched and combined PHY(s) from the ODUflex signal, re-adds the unavailable calendar slots, and outputs the resulting stream towards the FlexE PHY(s).
                </t>
                <t>
                    In the scenario illustrated in <xref target="fig_b100g_uc3a"></xref> the lowest rate OTUCn link is the OTUC4 link between NE1-NE2. This means that the size of the FlexE group is at most 4. FlexE groups with greater sizes can be handled by utilizing appropriate OTUCn links. Note that at most 400G of the capacity of OTUC6 (or 600G) NE2-NE3 link is occupied by the ODUflex signal; the remaining bandwidth can be allocated to other client signals.
                </t>
                <figure title = "FlexE aware transport over OTUCn links" align="center" anchor="fig_b100g_uc3a">
                    <preamble>==================================================================</preamble>
                    <artwork align="center">
                       <![CDATA[
FlexE    +----------+                       +----------+       FlexE
group    | Crunched |                       | Crunche  |       Group
  +------> and      |                       | and      +-------->
         | Combined |                       | Combined | Add
         | PHY(s)   |                       | PHY(s)   | unavailable
         +----------+   +---------------+   +----------+ Calendar
         |  ODUflex |   |    ODUflex    |   |  ODUflex | slots
         +----------+   +-------+-------+   +----------+
         |  ODUC4   |   | ODUC4 | ODUC6 |   |  ODUC6   |
         +----------+   +---------------+   +----------+
         |  OTUC4   +---+ OTUC4 | OTUC6 +---+  OTUC6   |
         +----------+   +-------+-------+   +----------+
            NE1             NE2               NE3

                  <--------->        <----------->
                  Scope of            Scope of
                  OTUC4, ODUC4        OTUC6, ODUC6

                    ]]>
                    </artwork>
                    <postamble>==================================================================</postamble>
                </figure>
            </section>
            <section title="FlexE Client transport over OTUCn links">
                <t> 
                    This use case (see <xref target="fig_b100g_uc3b"/>) concerns the scenario in which a FlexE group is terminated at the transport network edge node (via the FlexE SHIM function), and the FlexE clients are demultiplexed, and independently transported through the OTN network. In the scenario illustrated in <xref target="fig_b100g_uc3b"></xref> the lowest rate OTUCn link is the OTUC4 link between NE1-NE2. This means that the maximum bit rate of the FlexE client is at most 400G. FlexE clients with greater sizes can be handled by utilizing appropriate OTUCn links. This figure illustrates the case in which one FlexE client is transported between NE1 and NE3. Other FlexE clients recovered at NE1 can routed independently to NE3, or to other network elements.
                </t>
                
                <figure title = "FlexE client transport over OTUCn links" align="center" anchor="fig_b100g_uc3b">
                    <preamble>==================================================================</preamble>
                    <artwork align="center">
                        <![CDATA[
                        
      +-----------------+                       +---------------+
      |     FlexE       |                       |    FlexE      |
      |     Client      |                       |    Client     |
      +-----------------+                       +---------------+
      | FlexE |         |   +---------------+   |       | Flex  |
      | SHIM  | ODUflex |   |    ODUflex    |   |ODUflex| SHIM  |
      +-----------------+   +---------------+   +---------------+
      | FlexE | ODUC4   |   | ODUC4 | ODUC6 |   | ODUC6 | FlexE |
 +----+ PHY(s +---------+   +---------------+   +-------+ PHY(s)+---->
FlexE |       | OTUC4   +---+ OTUC4 | OTUC6 +---+ OTUC6 |       | FlexE
Group +-----------------+   +---------------+   +---------------+ Group
                 NE1            NE2                 NE3

                   <------------>       <----------->
                      Scope of            Scope of
                      OTUC4, ODUC4        OTUC6, ODUC6
                    ]]>
                    </artwork>
                    <postamble>==================================================================</postamble>
                </figure>
            </section>
            <section anchor = "section_multihop_ODUCn" title="Multihop ODUCn link">
                <t> 
                    As mentioned in the introductory section, the ODUCn is not a switchable entity. The ODUCn layer is a server layer, which more-or-less occupies the position of a section layer in OTN networks. As such, the ODUCn signal must be terminated and the contained low-order ODU flows can be switched independently to other OTN interfaces. G.709 and G.872 however allow for digital regenerators to terminate the OTUCn layer, and reinject the ODUCn layer towards another interface (where a new OTUCn section layer is started).  This scenario is illustrated in <xref target="fig_b100g_uc4"></xref>. In this figure, NE3 is the regenerator. The ODUC2 signal is terminated at NE2, and NE4. At the regeneration points, all the clients embedded inside the ODUCn signal are not touched (i.e. no TS changes can occur). More specifically, the OPUC2 signal is not modified in any way. However, the ODUC2 OH may be modified if intrusive TCM monitoring points are applied to the ODUC2 signal at NE3. It is for this reason that the ODUC2 entity must be visible at NE3.  
                </t>
                <t> 
                    In scenarios involving multi-hop ODUCn links, GMPLS signalling will be required to first establish the ODUCn LSP, and then use it as an FA-LSP to switch any contained Low-order ODUs.
                </t>
                <figure title = "Multihop ODUCn link" align="center" anchor="fig_b100g_uc4">
                    <preamble>==================================================================</preamble>
                    <artwork align="center">
                        <![CDATA[
+----------+                                               +----------+
|  100GE   |                                               |  100GE   |
+----------+     +---------------+                         +----------+
|  ODU4    |     |      ODU4     |                         |  ODU4    |
+----------+     +-------+-------+       +---------+       +----------+
|  ODUC1   |     | ODUC1 | ODUC2 |       |  ODUC2  |       |  ODUC2   |
+----------+     +---------------+       +---------+       +----------+
|  OTUC1   +-----+ OTUC1 | OTUC2 +-------+  OTUC2  +-------+  OTUC2   |
+----------+     +-------+-------+       +---------+       +----------+
   NE1               NE2                     NE3             NE4

         <------------->      <------------->     <------------->
            Scope of               OTUC2                OTUC2
            OTUC1, ODUC1

                              <--------------------------------->
                                            ODUC2

                    ]]>
                    </artwork>
                    <postamble>==================================================================</postamble>
                </figure>
            </section>
            <section title ="Use of OTUCn-M links">
                <t>
                   The scenario illustrated in <xref target="fig_b100g_uc5"/> is a variant of the basic usecase presented in <xref target="fig_b100g_uc1a"/>. The only difference is that the second hop of the ODU4 connection makes use of a OTUC2-30 link which has a capacity of 150G.
                </t>
                <figure title = "100GE Client service over OTUCn-M links" align="center" anchor="fig_b100g_uc5">
                    <preamble>==================================================================</preamble>
                    <artwork align="center">
                            <![CDATA[
    +----------+                                  +-----------+
    |  100GE   |                                  |  100GE    |
    +----------+        +------------------+      +-----------+
    |  ODU4    |        |      ODU4        |      |  ODU4     |
    +----------+        +-------+----------+      +-----------+
    |  ODUC1   |        | ODUC1 | ODUC2    |      |  ODUC2    |
    +----------+        +------------------+      +-----------+
    |  OTUC1   +--------+ OTUC1 | OTUC2-30 +------+  OTUC2-30 |
    +----------+        +-------+----------+      +-----------+
       NE1                  NE2                     NE3

             +------------->            +------------->
                Scope of                    Scope of
                OTUC1, ODUC1                OTUC2-30
                                            ODUC2

                        ]]>
                    </artwork>
                    <postamble>==================================================================</postamble>
                </figure>
            </section>
            
            <section title="Intermediate State of ODU mux">
                <t> 
                    The ODUCn links have a tributary slot granularity of 5G -- and this makes it a bit inefficient if a small number of ODU0 flows have to be switched across an ODUCn links. In these cases, it is conceivable that the intermediate nodes may offer the convenience of a intermediate-stage multiplexing, whereby multiple ODU0 flows are first multiplexed into a higher rate container (e.g. ODU2), and then multiplexed into an ODUCn signal. This however assumes that all these ODU0 flows are co-routed in the network. If this assumption cannot be made, the only solution is to multiplex these ODU0 flows into higher rate flows, from the source of the traffic. This usecase isn't elaborated in this document. We can add details if required.
                </t>
            </section>
        </section>
   
        <section title="GMPLS Implications">
            <section anchor="Layer" title="OTN ODUCn layer network">
				<t>
					As described in the overview section, ODUCn can not be used to support non-OTN client signal, so the mapping hierarchy would be the OTN client signals (e.g. ODU0, ODU1, ODU2, ODU2e, ODU3, ODU4, ODUflex) are first multiplexed into an ODUCn container, then the ODUCn container is then mapped into OTUCn (see <xref target="g709-digital-structure"/>). The signal hierarchy supported by the ODUCn and OTUCn layers needs to be taken into consideration in control plane Routing and Signaling.
				</t>
            </section>   
            
            <section title="Implications for GMPLS Signaling">
                <t>
                    As described in Section 3 <xref target="ITU-T_G709_2016"/> introduced some new containers, such as OPUCn, ODUCn, and OTUCn. The GMPLS signaling mechanisms defined in <xref target="RFC4328"/> and <xref target="RFC7139"/> do not support these new OTN features. Therefore, GMPLS signaling protocol extensions will be necessary to support this new functionality. The following summarizes key aspects that should be considered for GMPLS signaling extensions:
                </t>
                <t>
                    <list style="letters">
                        <t>
							The GMPLS signalling protocol SHALL be able to specify the new ODUCn/OTUCn signal types and related traffic information. The traffic parameters should be extended in a signalling message to support the new ODUCn/OTUCn signal types
						</t>
                        <t>
							The GMPLS signalling protocol SHALL be able to set up ODUCn/OTUCn LSP with related mapping and multiplexing capabilities, and allocate slot resources for ODU clients signal. [Note: Under Discussion]
						</t>
                        <t>
							The GMPLS signalling protocol SHALL be able to set up LSP using 5G TS granularity
						</t>
                        <t>
							The GMPLS signalling protocol SHALL support the TPN allocation and negotiation
						</t>
                        <t>
							The GMPLS signalling protocol SHALL support the setup of OTUCn sub rates (OTUCn-M) LSP, which includes the negotiation of unavaliable slots number, slots postion and allocation of slot resources.	[Note: Under Discussion]					
						</t>
                        <t>
							The GMPLS signalling protocol SHALL be able to set up ODUCn/OTUCn/OTUCn-M LSP over FlexO group. [Note: Under Discussion]
						</t>
						<t>
							The GMPLS signalling protocol SHALL be able to set up ODUCn/OTUCn/OTUCn-M LSP over different kinds of FlexO interfaces (e.g., 100G/200G FlexO interfaces) [Note: Under Discussion]
						</t>
                    </list>
                </t>        
            </section>      
                
            <section title="Implications for GMPLS Routing">
                <t>
					The path computation process needs to select a suitable route and capabilities for an ODUCn/OTUCn/OTUCn-M connection request. In order to perform the path computation, it needs to evaluate the available bandwidth/slots available on one or more candidate links. The routing protocol should be extended to convey sufficient information to represent ODU Traffic Engineering (TE) topology. Following GMPLS Routing Implications should be considered:
				</t>
                <t><list style="letters">
                    <t>
						The GMPLS Routing protocol should be able to indicate the ODUCn/OTUCn/OTUCn subrates (OTUCn-M) support information
					</t>
                    <t>
						The GMPLS Routing protocol SHALL support the advertisement of 5G Tributary Slot Granularity
					</t>
                    <t>
						The GMPLS Routing protocol SHALL support the advertisement of unused ODUCn tributary slot resource information.
					</t>
                    <t>
						The GMPLS Routing protocol SHALL support the advertisement of available/unavailable tributary slot information in OTUCn-M scenario
					</t>
                    <t>
						The GMPLS Routing protocol SHALL support the advertisement of OTUCn implementation (FlexO) specific information, including the specific Flexible OTN interface support information [Note: Under Discussion]
					</t>
                </list></t>
            </section>             
        </section>
         
        <section anchor="Acknowledgements" title="Acknowledgements">
            <t></t>
        </section>
        <!-- Possibly a 'Contributors' section ... -->
        <section anchor="IANA" title="IANA Considerations">
            <t>This memo includes no request to IANA.</t>
        </section>
        <section anchor="Security" title="Security Considerations">
            <t>None.</t>
        </section>
    </middle>
    <!--  *****BACK MATTER ***** -->
    <back>
        <!-- References split into informative and normative -->
        <!-- There are 2 ways to insert reference entries from the citation libraries:
    1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
    2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
       (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

    Both are cited textually in the same manner: by using xref elements.
    If you use the PI option, xml2rfc will, by default, try to find included files in the same
    directory as the including file. You can also define the XML_LIBRARY environment variable
    with a value containing a set of directories to search.  These can be either in the local
    filing system or remote ones accessed by http (http://domain/dir/... ).-->
        <references title="Normative References">
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
			<?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4328.xml"?>
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.7138.xml"?>  
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.7139.xml"?>          

            <reference anchor="ITU-T_G709_2016">
                <!-- the following is the minimum to make xml2rfc happy -->
                <front>
                    <title>ITU-T G.709: Optical Transport Network Interfaces; 07/2016 </title>
                    <author>
                        <organization> ITU-T</organization>
                    </author>
                   <date year="2016" month="July"/>
                </front>
                <seriesInfo name="" value="http://www.itu.int/rec/T-REC-G..709-201606-P/en"/>
           </reference>
            <reference anchor="ITU-T_G709_2012">
                <!-- the following is the minimum to make xml2rfc happy -->
                <front>
                    <title>ITU-T G.709: Optical Transport Network Interfaces; 02/2012 </title>
                    <author>
                        <organization> ITU-T</organization>
                    </author>
                   <date year="2012" month="February"/>
                </front>
                <seriesInfo name="" value="http://www.itu.int/rec/T-REC-G..709-201202-S/en"/>
           </reference>
            <reference anchor="ITU-T_G798">
                <!-- the following is the minimum to make xml2rfc happy -->
                <front>
                    <title>ITU-T G.798: Characteristics of optical transport network hierarchy equipment functional blocks; 02/2014</title>
                    <author>
                        <organization> ITU-T</organization>
                    </author>
                    <date year="2014" month="February"/>
                </front>
                <seriesInfo name="" value="http://www.itu.int/rec/T-REC-G.798-201212-I/en"/>
           </reference>
           <reference anchor="ITU-T_G872" target="">
                <!-- the following is the minimum to make xml2rfc happy -->
                <front>
                    <title>ITU-T G.872: The Architecture of Optical Transport Networks; 2017 </title>
                    <author>
                        <organization> ITU-T</organization>
                    </author>
                   <date year="2017" month="January"/>
                </front>
                <seriesInfo name="" value="http://www.itu.int/rec/T-REC-G.872/en"/>
           </reference>
           <reference anchor="ITU-T_G709.1">
                <!-- the following is the minimum to make xml2rfc happy -->
                <front>
                    <title> ITU-T G.709.1: Flexible OTN short-reach interface; 2016</title>
                    <author>
                        <organization> ITU-T</organization>
                    </author>
                   <date year="2016"/>
                </front>
                <seriesInfo name="" value=""/>
            </reference>
        </references>
        <references title="Informative References">
            <reference anchor="OIF_FLEXE_1.0">
                <!-- the following is the minimum to make xml2rfc happy -->
                <front>
                    <title>FLex Ethernet Implementation Agreement Version 1.0 (OIF-FLEXE-01.0)</title>
                    <author>
                        <organization> OIF</organization>
                    </author>
                    <date year="2016" month="March"/>
                </front>
            </reference>
            <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-izh-ccamp-flexe-fwk-00.xml"?> 
        </references>
    </back>
</rfc>
